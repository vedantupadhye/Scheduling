// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Order {
  SrNo              Int     @unique  
  orderNo           BigInt  @id @unique 
  weight            Int?
  quantity          Int?
  orderDeliveryDate DateTime
  grade             String
  thickness         Int?
  width             Int?
  orderThickness    Float?
  orderWidth        Float?
  tdc               String?
  deliveryPlace     String
  customerName      String?
  shippedBy         String
  createdBy         String
  createdAt         DateTime @default(now())
  producedQuantityWeight Int?  // Nullable
  producedQuantityNumber Int?  // Nullable
  balanceWeight          Int?  // Nullable
  balanceNumber          Int?  // Nullable
  leastProductionDate    DateTime?  // Nullable

  timeToShip            Int?
  timeForQualityCheck   Int?
}


model Inventory {
  IN_MaterialName      String   @unique // Ensure unique material names
  IN_Thickness         Float
  IN_Width             Float
  IN_Weight            Float
  IN_Grade             String
  ActuallWeight        Float
  In_ProductionDate    DateTime
  YardArrivalDate      DateTime
  Residence_INYard     String
  YardNO               String
  Position             String
  Manufacturing_Location String
  Manufacturer         String

  createdAt            DateTime @default(now()) // Timestamp for record creation
  updatedAt            DateTime @updatedAt      // Auto-updated timestamp
}

model InputMaterial {
  id        String  @id  
  weight    Int
  number    Int
  grade     String
  thickness String  // Storing range as a string (e.g., "1.5-4.5")
  width     Int
  createdAt DateTime @default(now()) // Timestamp for record creation
}


model RuleTable {
  id          Int      @id @default(autoincrement())
  ruleNo      String   @unique
  ruleName    String   @unique // Make ruleName unique to use it as a foreign key
  remark      String?
  modifyDate  DateTime @updatedAt
  createDate  DateTime @default(now())
  createdBy   String
  criteria    RuleCriteria[]
}

model RuleCriteria {
  id                   Int      @id @default(autoincrement())
  ruleName             String   // Change ruleId to ruleName for joining
  criteria             String
  parameterType        String?
  parameterValue       String?
  parameterMin         Float?
  parameterMax         Float?
  logic                String?
  controlParameter     String?
  controlInputType     String?
  controlValue         String?
  controlMin           Float?
  controlMax           Float?
  parameterStatus      String   @default("Enable")
  rule                 RuleTable @relation(fields: [ruleName], references: [ruleName], onDelete: Cascade)
}

model MaterialAllocationRules {
  id              Int      @id @default(autoincrement())
  orderParameter  String   // "Order Thickness", "Order Width", "Grade"
  logic           String   // "Less Than", "Less Than Equal To", "Equal To", "More Than", "More Than Equal To"
  parameter       Float    // Numeric value for the rule (e.g., tolerance)
  materialParameter String // "IN_Thickness", "IN_Width", "IN_Grade"
  status          String   @default("Active") // "Active" or "Inactive"
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


model ScheduleConfirmation {
  id              Int      @id @default(autoincrement())
  scheduleNo      String   // e.g., "SCH001"
  orderNo         BigInt   // From Order model
  outMaterialNo   String   // e.g., "NA00001"
  outThickness    Float?   // Nullable, from Order.orderThickness
  outWidth        Float?   // Nullable, from Order.orderWidth
  outGrade        String?  // Nullable, from Order.grade
  outCoilWeight   Int?     // Nullable, from Order.weight
  inMatNo         String   // From Inventory.IN_MaterialName
  inThickness     Float    // From Inventory.IN_Thickness
  inWidth         Float    // From Inventory.IN_Width
  inGrade         String   // From Inventory.IN_Grade
  inactualWeight    Float    // From Inventory.ActuallWeight (assuming typo in your schema)
  createdAt       DateTime @default(now())
}
model ScheduleMaker {
  id              Int      @id @default(autoincrement())
  orderNo         BigInt
  inMaterialName  String
  inThickness     Float
  inWidth         Float
  inGrade         String
  inactualWeight  Float
  orderThickness  Float?
  orderWidth      Float?
  grade           String?
  weight          Int?
  In_ProductionDate DateTime? // Added to match Inventory
  YardArrivalDate  DateTime? // Added to match Inventory
  Residence_INYard String?   // Added to match Inventory
  YardNO           String?   // Added to match Inventory
  Position         String?   // Added to match Inventory
  Manufacturing_Location String? // Added to match Inventory
  Manufacturer     String?   // Added to match Inventory
  createdAt       DateTime @default(now())
}

model ScheduleCounter {
  id    Int @id @default(autoincrement())
  count Int @default(1)
}


